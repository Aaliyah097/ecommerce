version: '3'

services:
    nginx:
        restart: always # при падении будет стараться подняться
        image: nginx:latest # только свежий nginx
        expose:
           - 5000 # слушает порт 8080
        ports:
          - "80:5000"  # мапаем порт 80 на его 80. Тогда сайт будет доступен по адресу localhost. Убедись, что порт у тебя не занят.
        volumes: # монтируем только те директории, в которых лежит статика, т.к. nginx с динамикой не будет работать. Также директорию с логами и файл настройки, который мы подготовили.
            - ./static:/srv/www/ecommerce/static
            - ./media:/srv/www/ecommerce/media
            - ./logs:/srv/www/ecommerce/logs
            - ./docker/nginx:/etc/nginx/conf.d
            # - ./ssl-keys/story:/etc/ssl/story
            - /var/www/html:/var/www/html
            # - /etc/letsencrypt/:/etc/letsencrypt
        depends_on: # и nginx зависит от контейнера python. Т.е. python должен быть запущен первым
            - python
        networks:
            - backend
    python:
        restart: always # режим  запуска перезапуска при падении
        # stdin_open: true # docker run -i
        build:
            context: .
            dockerfile: docker/python/Dockerfile # монтируем директорию проекта
        volumes:
            - ./:/srv/www/story
        expose:
          - 5000
        # ports:
        #     - 8000:8000
        networks:
            - backend
        command: "gunicorn -c gunicorn.py ecommerce.wsgi:application --bind 0.0.0.0:5000" # запускаем gunicorn
        # command: python manage.py runserver 0.0.0.0:8000
networks:
  backend:
    driver: bridge